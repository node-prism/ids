var l=Object.defineProperty;var u=(a,t,e)=>t in a?l(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var i=(a,t,e)=>(u(a,typeof t!="symbol"?t+"":t,e),e);import o from"long";var r=class{static get base(){return r.alphabet.length}static shorten(t){let e="";for(;t>0;)e=r.alphabet[t%r.base]+e,t=Math.floor(t/r.base);return e}static unshorten(t){let e=0;for(let s=0;s<t.length;s++)e=e*r.base+r.alphabet.indexOf(t[s]);return e}},n=r;i(n,"MAX_INT32",2147483647),i(n,"MULTIPLIER",4294967296),i(n,"alphabet","23456789bcdfghjkmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ-_"),i(n,"prime",1125812041),i(n,"inverse",348986105),i(n,"random",998048641),i(n,"encode",t=>{if(t>r.MAX_INT32)throw new Error(`Number (${t}) is too large to encode. MAX_INT32 is ${r.MAX_INT32}`);let e=o.fromInt(t);return r.shorten(e.multiply(r.prime).and(o.fromInt(r.MAX_INT32)).xor(r.random).toInt())}),i(n,"decode",t=>o.fromInt(r.unshorten(t)).xor(r.random).multiply(r.inverse).and(o.fromInt(r.MAX_INT32)).toInt());export{n as default};
